{
  //? Any user that will be considered as an "owner" of the bot. (ID)
  //! If you are working in a team, but the bot is not in a Discord Developer team and is only owned by one person, it is recommended to add your team member's user IDs here.
  "externalOwners": [],

  //? Show errors on "There was an error while executing this command!".
  //? If the user that ran the command is an owner, detailed error information will be shown.
  //! For development purposes, it is recommended to keep this on.
  "showErrors": true,
  //? This option shows messages like "registered command xyz", "running event xyz", etc. recommended to be on for satisfication purposes.
  "debugging": true,

  //? This option allows you to skip the 3 second wait that IRIS gives after it fails to connect to the MongoDB server (or if it wasn't provided in the first place).
  "skipMongoFailWait": false,

  //? This option let's you choose where you want the data to be stored if MongoDB is not available.
  //! ------------------------------------------------------------------
  //! Production (user   ): <backupStoragePath>/production/userdata.json
  //! Production (server ): <backupStoragePath>/production/serverdata.json
  //! Production (offense): <backupStoragePath>/production/offensedata.json
  //! ------------------------------------------------------------------
  //! Development (user   ): <backupStoragePath>/development/userdata_<serverID>.json
  //! Development (server ): <backupStoragePath>/development/serverdata_<serverID>.json
  //! Development (offense): <backupStoragePath>/development/offensedata_<serverID>.json
  //! ------------------------------------------------------------------
  "backupStoragePath": "./storage", //* The path where the data will be stored (relative to IRIS's root directory)

  //? This the main server that the bot will operate on if "DEVELOPMENT" is set to "NO" in .env (ID)
  "mainServer": "931616832668958748", //* global.app.config.mainServer will automatically get replaced with global.app.config.developmentServer if "DEVELOPMENT" is set to "YES" in .env
  //? This is the development server that the bot will operate on if "DEVELOPMENT" is set to "YES" in .env (ID)
  "developmentServer": "1217372927981522994",

  //? This is the MongoDB server that IRIS will connect to and use for data storage.
  //! The database credentials are in .env
  //! The database needs to have a database called "IRIS" (production) and "IRIS_DEVELOPMENT" (dev). IRIS will automatically fill these databases with the required collections.
  //?
  //! Check this guide out on how to make a local MongoDB server: https://www.prisma.io/dataguide/mongodb/setting-up-a-local-mongodb-database
  "mongoDBServer": "inimicalpart.com",

  // "development": true //* 'global.app.config.development' will be automatically set true if 'DEVELOPMENT' is set to 'YES' in .env

  //? These permissions are for commands.
  //? @userid
  //? &rolename (recommended) / &roleid
  //? #channelname (recommended) / #channelid
  //?
  //? canSee is whether or not the user can see the command when they do /. If the user can't see the command, they can't use it.
  //? Commands that only have the main command name, no subcommand group or subcommand, need a "canSee" value as well as a "canUse" value.
  //? Commands that have more than the main command (subcommand group / subcommand) only need a "canUse" value
  //?  
  //! "main" takes care of permissions for the main server, meaning that those are the permissions that will be applied to the "mainServer" if "DEVELOPMENT" is set to "NO" in .env
  //! "development" does the opposite - it will only apply the permissions on the "developmentServer", but only if "DEVELOPMENT" is set to "YES" in .env
  //?
  //?
  //! These permissions are applied in a hierarchical order, from less specific to most specific. 
  //! For example:
  //! If "admin" (/admin) has subcommands but permissions are set so that @everyone can't use them, but there also is "admin iris logs" (/admin iris logs) set so that @everyone can use it, this will make it so that @everyone cannot use any /admin commands except for /admin iris logs 
  //?
  //! Keep also in mind that for a role/person to be able to use a more specific command, that person needs to have "canSee" set to true in the least specific permission for that command
  "permissions": {
    "admin": {
      "main": [
        { "selector": "&Administrator", "canSee": true, "canUse": true },
        { "selector": "&Moderator", "canSee": true, "canUse": true },
        { "selector": "&Support Team", "canSee": true, "canUse": true },
        { "selector": "&IRIS Development", "canSee": true, "canUse": false },
        { "selector": "&everyone", "canSee": false, "canUse": false }
      ],
      "development": [
        { "selector": "&Administrator", "canSee": true, "canUse": true },
        { "selector": "&Moderator", "canSee": true, "canUse": true },
        { "selector": "&everyone", "canSee": false, "canUse": false }
      ]
    }
  },

  //? The default entry that will be created for new users, some fields will be automatically filled in by the bot.
  //! Do not edit this unless you are adding new fields about a user to the database.
  "defaultEntry": {
    "id": "", //* ID of the user
    "last_active": null, //* ISO timestamp of when user last ran a command or sent a message in the server 
    "timezones": [], //* The last 4 timezones that IRIS predicted for a user when they type "timezone 4:32am" (used for birthday messages sent at 12am in their timezone)
    "username": "", //* The user's username (e.g @theinimi)
    "approximatedTimezone": null, //* The final timezone that IRIS has determined for the user, this is evaluated by checking what appears the most times in "timezones"
    "birthday": null, //* User's birth date in yyyy-mm-dd format
    "birthdayPassed": false, //* If the user had their birthday recently (no need to touch this one)
    "isNew": false, //* If the user is a new member on the server (lasts for 7 days)
    "gameData": {}, //* Game data from games like UNO and wordle
    "settings": {
      "changeTimezone": true //* Whether to change the user's approximatedTimezone when user types "timezone 4:32am" (gets set to false when user manually sets their timezone using /settimezone)
    }
  },

  //? This specifies resources for the bot to use, such as links to wordle answers and guesses. (Make sure to use raw links if using GitHub!)
  //! You can access these resources using 'global.app.config.resources.xyz'
  "resources": {
    "wordle": {
      "validGuesses": "https://gist.githubusercontent.com/cfreshman/cdcdf777450c5b5301e439061d29694c/raw/b8375870720504ecf89c1970ea4532454f12de94/wordle-allowed-guesses.txt",
      "validWords": "https://gist.githubusercontent.com/cfreshman/a03ef2cba789d8cf00c08f767e0fad7b/raw/1792f853e1cd0249f7588c724e00d46dbc4894eb/wordle-answers-alphabetical.txt"
    }
  }
}